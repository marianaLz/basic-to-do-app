{"version":3,"sources":["serviceWorker.js","Context.js","services/auth.js","components/common/Navbar.js","hooks/useForm.js","components/auth/Login.js","components/auth/Signup.js","services/tasks.js","components/tasks/TaskListItem.js","components/tasks/TasksList.js","components/tasks/TaskForm.js","components/tasks/Main.js","Router.js","index.js"],"names":["Boolean","window","location","hostname","match","MyContext","createContext","ContextProvider","setTasks","task","tasks","state","Array","isArray","setState","onEditTask","index","splice","setTaskToEdit","form","console","log","removeTask","id","filter","_id","login","user","logout","JSON","parse","localStorage","getItem","this","Provider","value","props","children","Component","baseURL","AuthService","service","axios","create","withCredentials","data","post","get","Navbar","authService","useContext","handleLogout","then","clear","catch","err","Consumer","className","uk-navbar","exact","to","onClick","useForm","useState","setForm","e","persist","prevState","target","name","Login","handleInputs","useEffect","history","push","uk-icon","type","placeholder","onChange","response","message","swal","title","text","icon","dangerMode","timer","button","setItem","stringify","Signup","pattern","required","signup","taskService","TaskListItem","description","deleteTask","href","TaskList","map","key","TaskForm","createTask","editTask","Main","tasktoEdit","tasksService","TasksService","allTasks","editTasks","findIndex","t","username","TasksList","deleteTasks","res","createTasks","Router","path","component","UIkit","use","Icons","ReactDOM","render","Context","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1176087.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, Component } from \"react\";\n\nexport const MyContext = createContext();\n\nclass ContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: JSON.parse(localStorage.getItem(\"USER\")),\n      tasks: [],\n      form: {}\n    };\n  }\n\n  setTasks = task => {\n    let { tasks } = this.state;\n    tasks = Array.isArray(task) ? [...tasks, ...task] : [...tasks, task];\n    this.setState({ tasks });\n  };\n\n  onEditTask = (index, task) => {\n    const { tasks } = this.state;\n    tasks.splice(index, 1, task);\n    this.setState({ tasks });\n  };\n\n  setTaskToEdit = task => {\n    this.setState({ form: task }, () => console.log(this.state));\n  };\n\n  removeTask = id => {\n    let { tasks } = this.state;\n    tasks = tasks.filter(task => task._id !== id);\n    this.setState({ tasks });\n  };\n\n  login = user => {\n    this.setState({ user });\n  };\n\n  logout = () => this.setState({ user: null, tasks: [] });\n\n  render() {\n    const {\n      state,\n      login,\n      logout,\n      setTasks,\n      removeTask,\n      setTaskToEdit,\n      onEditTask\n    } = this;\n    return (\n      <MyContext.Provider\n        value={{\n          state,\n          login,\n          logout,\n          setTasks,\n          removeTask,\n          setTaskToEdit,\n          onEditTask\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default ContextProvider;\n","import axios from \"axios\";\nconst isProduction = process.env.NODE_ENV === \"production\";\nconst baseURL = isProduction\n  ? \"https://basic-to-do-app.herokuapp.com\"\n  : \"http://localhost:3001\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL,\n      withCredentials: true\n    });\n  }\n  signup(data) {\n    return this.service.post(\"/api/signup\", data);\n  }\n  login(data) {\n    return this.service.post(\"/api/login\", data);\n  }\n  logout() {\n    return this.service.post(\"/api/logout\");\n  }\n  loggedin() {\n    return this.service.get(\"/api/loggedin\");\n  }\n}\n\nexport default AuthService;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MyContext } from \"../../Context\";\nimport AuthService from \"../../services/auth\";\n\nconst Navbar = () => {\n  const authService = new AuthService();\n  const { logout } = useContext(MyContext);\n\n  const handleLogout = () => {\n    authService\n      .logout()\n      .then(() => {\n        logout();\n        localStorage.clear();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <MyContext.Consumer>\n          {({ state }) => {\n            return !state.user ? (\n              <nav className=\"uk-navbar-container\" uk-navbar=\"true\">\n                <div className=\"uk-navbar-right\">\n                  <ul className=\"uk-navbar-nav\">\n                    <li>\n                      <NavLink exact to=\"/login\">\n                        Login\n                      </NavLink>\n                    </li>\n                    <li>\n                      <NavLink exact to=\"/signup\">\n                        Signup\n                      </NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n            ) : (\n              <nav className=\"uk-navbar-container\" uk-navbar=\"true\">\n                <div className=\"uk-navbar-right\">\n                  <ul className=\"uk-navbar-nav\">\n                    <li>\n                      <NavLink exact to=\"/\" onClick={handleLogout}>\n                        Logout\n                      </NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n            );\n          }}\n        </MyContext.Consumer>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { useState } from \"react\";\n\nconst useForm = () => {\n  const [form, setForm] = useState({});\n\n  const handleInputs = e => {\n    e.persist();\n    setForm(prevState => {\n      return {\n        ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  return [form, handleInputs, setForm];\n};\n\nexport default useForm;\n","import React, { useContext, useEffect } from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport AuthService from \"../../services/auth\";\nimport { MyContext } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nconst Login = props => {\n  const {\n    login,\n    state: { user }\n  } = useContext(MyContext);\n  const authService = new AuthService();\n  const [form, handleInputs] = useForm();\n\n  useEffect(() => {\n    if (user) props.history.push(\"/\");\n  }, [user]);\n\n  const handleLogin = () => {\n    authService.login(form).then(response => {\n      if (!response.data.message) {\n        localStorage.setItem(\"USER\", JSON.stringify(response.data));\n        login(response.data);\n        props.history.push(\"/\");\n      } else {\n        swal({\n          title: \"Oops...\",\n          text: \"Something went wrong authenticating user\",\n          icon: \"error\",\n          dangerMode: true,\n          timer: 3000,\n          button: false\n        });\n      }\n    });\n  };\n\n  return (\n    <div className=\"uk-flex uk-flex-center uk-align-center\">\n      <div>\n        <div className=\"uk-margin-large-top uk-text-center uk-card uk-card-default uk-card-body\">\n          <h2>Login</h2>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"User\"\n                onChange={handleInputs}\n                className=\"uk-input uk-form-width-medium\"\n              />\n            </div>\n          </div>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline uk-margin\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={handleInputs}\n                className=\"uk-input uk-form-width-medium\"\n              />\n            </div>\n          </div>\n          <button className=\"uk-button uk-button-primary\" onClick={handleLogin}>\n            Login\n          </button>\n          <p>\n            Don't have an account yet?\n            <Link to=\"/signup\"> Signup</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport AuthService from \"../../services/auth\";\nimport { MyContext } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\n\nconst Signup = props => {\n  const { login } = useContext(MyContext);\n  const authService = new AuthService();\n  const [form, handleInputs] = useForm();\n\n  const handleSignup = () => {\n    authService\n      .signup(form)\n      .then(response => {\n        login(response.data);\n        localStorage.setItem(\"USER\", JSON.stringify(response.data));\n        props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"uk-flex uk-flex-center uk-align-center\">\n      <div>\n        <div className=\"uk-margin-large-top uk-text-center uk-card uk-card-default uk-card-body\">\n          <h2>Signup</h2>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"User\"\n                onChange={handleInputs}\n                className=\"uk-input uk-form-width-medium\"\n              />\n            </div>\n          </div>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline uk-margin\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={handleInputs}\n                className=\"uk-input uk-form-width-medium\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                required={true}\n              />\n            </div>\n          </div>\n          <button\n            className=\"uk-button uk-button-primary\"\n            onClick={handleSignup}\n          >\n            Signup\n          </button>\n          <p>\n            Do you already have an account?\n            <Link to=\"/login\"> Login</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import axios from \"axios\";\nconst isProduction = process.env.NODE_ENV === \"production\";\nconst baseURL = isProduction\n  ? \"https://basic-to-do-app.herokuapp.com\"\n  : \"http://localhost:3001\";\n\nclass taskService {\n  constructor() {\n    this.service = axios.create({\n      baseURL,\n      withCredentials: true\n    });\n  }\n  allTasks(data) {\n    return this.service.get(\"/api/tasks\", data);\n  }\n  createTasks(data) {\n    return this.service.post(\"/api/tasks/create\", data);\n  }\n  editTasks(id, data) {\n    return this.service.post(`/api/tasks/edit/${id}`, data);\n  }\n  deleteTasks(id) {\n    return this.service.post(`/api/tasks/delete/${id}`);\n  }\n}\n\nexport default taskService;\n","import React from \"react\";\n\nconst TaskListItem = ({ title, description, deleteTask, setTaskToEdit }) => (\n  <div className=\"uk-card uk-card-default uk-margin\">\n    <div className=\"uk-card-body uk-padding-small\">\n      <h3 className=\"uk-margin-remove\">{title}</h3>\n      <p className=\"uk-margin-remove\">{description}</p>\n    </div>\n    <div className=\"uk-card-footer\">\n      <div className=\"uk-flex uk-flex-right\">\n        <div className=\"uk-width-2-5 uk-flex uk-flex-around\">\n          <a\n            className=\"uk-button uk-button-text\"\n            href=\"#\"\n            onClick={setTaskToEdit}\n          >\n            <span uk-icon=\"icon: pencil; ratio:0.7\" /> Edit\n          </a>\n          <a className=\"uk-button uk-button-text\" href=\"#\" onClick={deleteTask}>\n            <span uk-icon=\"icon: trash; ratio:0.7\" /> delete\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default TaskListItem;\n","import React from \"react\";\nimport TaskListItem from \"./TaskListItem\";\n\nconst TaskList = ({ tasks, deleteTask, setTaskToEdit }) => (\n  <div className=\"uk-flex uk-flex-center\">\n    <div className=\"uk-width-2-3\">\n      {tasks.map((task, index) => (\n        <TaskListItem\n          deleteTask={() => deleteTask(task._id)}\n          setTaskToEdit={() => setTaskToEdit(task)}\n          key={index}\n          {...task}\n        />\n      ))}\n    </div>\n  </div>\n);\n\nexport default TaskList;\n","import React from \"react\";\n\nconst TaskForm = ({\n  handleInputs,\n  createTask,\n  title = \"\",\n  _id,\n  description = \"\",\n  editTask\n}) => {\n  return (\n    <div className=\"uk-flex uk-flex-center uk-align-center\">\n      <div>\n        <div className=\"uk-margin-large-top uk-text-center uk-card uk-card-default uk-card-body\">\n          <h2>Add task</h2>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: calendar\"></span>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Task title\"\n                onChange={handleInputs}\n                value={title}\n                className=\"uk-input uk-form-width-large\"\n              />\n            </div>\n          </div>\n          <div className=\" uk-margin\">\n            <div className=\"uk-inline uk-margin\">\n              <textarea\n                type=\"text\"\n                name=\"description\"\n                value={description}\n                placeholder=\"Enter a description\"\n                onChange={handleInputs}\n                className=\"uk-textarea uk-form-width-large\"\n              />\n            </div>\n          </div>\n          <button\n            className=\"uk-button uk-button-primary\"\n            onClick={_id ? editTask : createTask}\n          >\n            {\" \"}\n            {_id ? \"Edit\" : \"add\"} Task\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskForm;\n","import React, { useContext, useEffect } from \"react\";\nimport { MyContext } from \"../../Context\";\nimport useForm from \"../../hooks/useForm\";\nimport TasksService from \"../../services/tasks\";\nimport TasksList from \"./TasksList\";\nimport TaskForm from \"./TaskForm\";\n\nconst Main = props => {\n  let {\n    setTasks,\n    removeTask,\n    setTaskToEdit,\n    onEditTask,\n    state: { user, tasks, form: tasktoEdit }\n  } = useContext(MyContext);\n  const [form, handleInputs, setForm] = useForm();\n  const tasksService = new TasksService();\n\n  useEffect(() => {\n    if (user) {\n      tasksService.allTasks().then(({ data }) => {\n        setTasks([...data]);\n      });\n    } else {\n      props.history.push(\"/login\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    setForm(tasktoEdit);\n  }, [tasktoEdit]);\n\n  const createTask = () => {\n    tasksService.createTasks(form).then(({ data: task }) => {\n      setTasks(task);\n    });\n  };\n\n  const editTask = id => {\n    tasksService.editTasks(id, form).then(({ data }) => {\n      const index = tasks.findIndex(t => t._id === data._id);\n      onEditTask(index, data);\n    });\n  };\n\n  const deleteTask = id => {\n    tasksService.deleteTasks(id).then(res => {\n      removeTask(res.data._id);\n    });\n  };\n\n  if (!user) return <p>Unauthorized...</p>;\n  else\n    return (\n      <div className=\"uk-flex uk-flex-around\">\n        <div className=\"uk-width-1-2\">\n          <h1 className=\"uk-margin-large-top uk-text-center\">\n            Welcome {user.username}!\n          </h1>\n          <h3 className=\"uk-text-center\">Your tasks list is here:</h3>\n          <TasksList\n            tasks={tasks}\n            editTask={editTask}\n            deleteTask={deleteTask}\n            setTaskToEdit={setTaskToEdit}\n          />\n        </div>\n        <div className=\"uk-width-1-2\">\n          <TaskForm\n            {...form}\n            createTask={createTask}\n            handleInputs={handleInputs}\n            editTask={() => editTask(form._id)}\n          />\n        </div>\n      </div>\n    );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/common/Navbar\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport Main from \"./components/tasks/Main\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./Router\";\nimport ContextProvider from \"./Context\";\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.min.css\";\n\n// loads the Icon plugin\nUIkit.use(Icons);\n\nReactDOM.render(\n  <ContextProvider>\n    <Router />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}